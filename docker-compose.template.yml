version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: user_app_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: user_app
      MYSQL_ROOT_PASSWORD: 
      MYSQL_USER: laravel
      MYSQL_PASSWORD: 
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database-mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

 # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: user_app_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: user_app_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: 
      RABBITMQ_DEFAULT_PASS: 
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Laravel Backend
  backend:
    build:
      context: ./backend-laravel
      dockerfile: Dockerfile
    container_name: user_app_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: user_app
      DB_USERNAME: 
      DB_PASSWORD: 
      APP_KEY: 
      JWT_SECRET: 
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: null
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: rabbitmq
      # RabbitMQ Configuration
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: 
      RABBITMQ_PASSWORD: 
      RABBITMQ_VHOST: /
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - ./backend-laravel:/var/www/html
    networks:
      - app_network

  # React Frontend
  frontend:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    container_name: user_app_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
    networks:
      - app_network

volumes:
  db_data:
  redis_data:
  rabbitmq_data:

networks:
  app_network:
    driver: bridge